(begin-tx)
(env-data { "grumpy-cat-llc-keyset" : ["grumpy-cat-llc"]})
(env-keys ["grumpy-cat-llc"])
(define-keyset 'grumpy-cat-llc-keyset (read-keyset "grumpy-cat-llc-keyset"))

(env-data {"current-time": "1970-01-01T00:00:00Z"})
(load "coin.pact")
(load "crowdfund-payments.pact")
(commit-tx)
(use uber-4-cats-crowdfund)
(coin.create-account 'grumpy-cat-llc 'grumpy-cat-llc-keyset)

; create account
; define table
; (create-table payments-table)
; TODO why don't I need to create a table here?

; create accounts
; TODO why is this angry?
;; (create-account "Sarah" 100.25 (read-keyset "sarah-keyset"))
;; (create-account "James" 250.0 (read-keyset "james-keyset"))


;; do payment, simluating SARAH keyset.
; TODO why doesn't this work?
;(pay "Sarah" "James" 25.0 (read-keyset "james-keyset"))
;; (format "Sarah's balance is {}" [(get-balance "Sarah")])

;; read James' balance as JAMES
;; (format "James's balance is {}" [(get-balance "James")])
